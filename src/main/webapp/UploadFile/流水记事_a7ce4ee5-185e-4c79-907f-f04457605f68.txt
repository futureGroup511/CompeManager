亲就只有文字的 呢 亲您看看哈
墨盒上面有个标签 撕开标签 见到一个孔 用加墨器在上面注个孔 然后把墨水加进去就可以
-
加墨水时，尽量做到少量多次！每次加墨后，都必须要先静置10分钟左右，让墨水慢慢到达喷头处，才能有更好 的打印效果。加墨水时，尽量不要让墨水从喷头处流出，那样，已经加多了！一般，黑色墨盒，加水不能超过10ML，彩色墨盒，每个颜色不能超过3ML【重要消息：加墨水需要一定的技术！否则会失败！】
-
加墨是需要技术的，同时也是有一定的风险，根据个人技术的效果为准，很多情况加多了 或者加少了 或者把芯片烧了墨盒 就损坏了
HP802 墨盒加墨图解：http://wenku.baidu.com/view/3f2a6dd733d4b14e852468ad.html

 

小组经费
-12快递
-5打印表格



regedit打开注册表定位到 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet双击键值 EnableActiveProbing ,将默认的1改为0，
实例名称：iZ28lzviergZ，
公网IP：115.28.206.247
系统用户名： root
http://115.28.206.247:8888
http://115.28.206.247:8080

01231 171514
root
FUTUREfuture511





css权威指南
Head First设计模式
javaScript高级程序设计
算法竞赛入门经典完整版

职务：需要4个职务
1、段阶段，长阶段考核（短阶段保持到两周以内），定期让各方向整理各种学习资料以及资源，每个阶段考核作品管理。  张雪
2、讲课（高年级对低年级）  老牛  每周6
3、项目，咱现在项目分为：商业，学校部门，团队项目（水果团购）、以及科研项目   刘国坤
4、竞赛，大学生创新项目       彩秋放
刘阳
5、身体锻炼
6、头脑风暴（初步定于周三晚上）


学习
1、讲课
2、考核
3、头脑风暴
4、帮带关系执行分配
5、组织同学参加竞赛
6、了解各方向每个人目前的学习动态
7、15级管理

其他方面
1、考勤，请假
2、卫生
3、小组电脑管理
4、参加创新活动
5、促进团队融合，让团队成员之间更有融合力
6、小组活动
7、小组资源管理（包括各方向学习资料的收集）
7、阿里云空间




2.26小组会议 高老师李老师
1、关于学习。包括课堂学习和专业理论基础。
（高老师多次强调课堂学习）
2、关于蓝桥杯惨败。大家要知耻而后勇，多参加竞赛，多学习，培养自己的能力
3、竞赛。最近两个竞赛，一个是ACM 一个是天梯赛，这两个都是训练自己算法的。大家要积极主动报名
4、关于写计划书的能力。
5.淘汰计划，从参加项目，计划书的撰写，学习进度，请假情况以及个方向负责人的评价还有大家评价。
6、学习时间上要有保证，不能拖拉，要养成雷厉风行的习惯。




4.27高老师电话
1、关于ACM竞赛报名，
2、批评撰写计划书的能力，
3、五一之后来一轮大淘汰，  淘汰从参加项目，计划书的撰写，学习进度，请假情况以及个方向负责人的评价还有大家评价。
4、小组风气，各负责人没有很好的利用起来。
5、请假记录一定要记。
6、关于学习进度，
7、汇报个方向的项目进度，并进行演示
8、各方向负责人要负起责任。




1 1.heap是堆，stack是栈。2.stack的空间由操作系统自动分配和释放，heap的空间是手动申请和释放的，heap常用new关键字来分配。3.stack空间有限，heap的空间是很大的自由区。在Java中，若只是声明一个对象，则先在栈内存中为其分配地址空间，若再new一下，实例化它，则在堆内存中为其分配地址。4.举例：数据类型 变量名；这样定义的东西在栈区。如：Object a =null; 只在栈内存中分配空间new 数据类型();或者malloc(长度); 这样定义的东西就在堆区如：Object b =new Object(); 则在堆内存中分配空间

wait():使一个线程处于等待状态，并且释放所持有的对象的lock。
sleep():使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要捕捉InterruptedException异常。
notify():唤醒一个处于等待状态的线程，注意的是在调用此方法的时候，并不能确切的唤醒某一个等待状态的线程，而是由JVM确定唤醒哪个线程，而且不是按优先级。
Allnotity():唤醒所有处入等待状态的线程，注意并不是给所有唤醒线程一个对象的锁，而是让它们竞争。




final修饰的类不能被继承。
Sting就是一个被final修饰的类，我们只能用，不用继承
final不仅可以修饰类，还可以修饰变量，被final修饰的变量就是一个常量，只能赋值一次

注意final和finally的区别，final是修饰类或者变量，finally是在异常处理中使用，如：
try{ }catch（）{}finally{}中，finally的作






